"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9005],{6202:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var r=i(5893),n=i(1151),o=i(2463);i(9047),i(3692);const s={},a="Remove Item Action",d={id:"adapters/BasicAdapter/entries/action/remove_item",title:"Remove Item Action",description:"The Remove Item Action is an action that removes an item from the player's inventory.",source:"@site/docs/adapters/BasicAdapter/entries/action/remove_item.mdx",sourceDirName:"adapters/BasicAdapter/entries/action",slug:"/adapters/BasicAdapter/entries/action/remove_item",permalink:"/TypeWriter/adapters/BasicAdapter/entries/action/remove_item",draft:!1,unlisted:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/main/documentation/docs/adapters/BasicAdapter/entries/action/remove_item.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adapters",previous:{title:"Random Trigger Gate",permalink:"/TypeWriter/adapters/BasicAdapter/entries/action/random_trigger"},next:{title:"Message Action",permalink:"/TypeWriter/adapters/BasicAdapter/entries/action/send_message"}},c={},m=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",...(0,n.a)(),...e.components};return o||p("fields",!1),o.CriteriaField||p("fields.CriteriaField",!0),o.EntryField||p("fields.EntryField",!0),o.ModifiersField||p("fields.ModifiersField",!0),o.TriggersField||p("fields.TriggersField",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"remove-item-action",children:"Remove Item Action"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"Remove Item Action"})," is an action that removes an item from the player's inventory.\nThis action provides you with the ability to remove items from the player's inventory in response to specific events."]}),"\n",(0,r.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,r.jsxs)(t.p,{children:["This can be used when ",(0,r.jsx)(t.code,{children:"giving"})," an NPC an item, and you want to remove the item from the player's inventory.\nOr when you want to remove an item from the player's inventory when they complete a quest or achievement."]}),"\n",(0,r.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(o.CriteriaField,{}),"\n",(0,r.jsx)(o.ModifiersField,{}),"\n",(0,r.jsx)(o.TriggersField,{}),"\n",(0,r.jsx)(o.EntryField,{name:"Material",required:!0,children:(0,r.jsx)(t.p,{children:"The item to remove."})}),"\n",(0,r.jsx)(o.EntryField,{name:"Amount",required:!0,children:(0,r.jsx)(t.p,{children:"The amount of items to remove."})}),"\n",(0,r.jsx)(o.EntryField,{name:"Exact Amount",required:!0,children:(0,r.jsx)(t.p,{children:"Does the player need to have the exact amount of items?"})}),"\n",(0,r.jsx)(o.EntryField,{name:"Item Name",optional:!0,placeholders:!0,colored:!0,children:(0,r.jsx)(t.p,{children:"If the name is given, the item must have the same name to be removed."})})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);